if !has('nvim') | set viminfofile=$XDG_STATE_HOME/vim/viminfo | endif
"======VIM-KEY-BINDINGS-REFERENCE======
"
" <leader> = ','
"
" KEY           MODE      USE
" ---------     -------   ---------------
" <leader>jk    INSERT    Switch to NORMAL
" <up>          NORMAL    Move line up
" <down>        NORMAL    Move line down
" <c-z>         NORMAL    Undo
" <leader>v     NORMAL    Visual Block
" <leader>H     NORMAL    Move cursor to beginning of line
" <leader>L     NORMAL    Move cursor to end of line
" <leader>Y     NORMAL    Scroll up
" <leader>J     NORMAL    Scroll down
" <leader>f     NORMAL    Toggle fold of indented lines
" <leader>F     NORMAL    Fold all indented lines
" <leader>FF    NORMAL    Unfold all indented lines
"
" N             NORMAL    NERDTreeToggle
" <Tab>         NORMAL    CoC (Select emmet)
" <leader>r     NORMAL    CoC (Code references [Definition])
" <leader>rn    NORMAL    CoC (Rename all occurrence)
" <leader>p     NORMAL    Prettier formatter
" <c-p>         NORMAL    Fuzzy Finder (folder)
" <c-g>         NORMAL    Fuzzy Finder (buffer)
" <c-m>         NORMAL    Fuzzy Finder (mixed)
" <C-c>         VISUAL    Copy to Windows clipboard (WSL)
"
"================VIM-PLUG==============
set encoding=UTF-8
"filetype off
filetype plugin on

"let g:coc_disable_startup_warning = 1
"call plug#begin()
""
"""Plugin for displaying directories
"Plug 'preservim/nerdtree'
"""Plugin for commenting
"Plug 'preservim/nerdcommenter'

"""Plugin for Prettier
"Plug 'prettier/vim-prettier',{'branch':'release/0.x'}

"""Colorscheme 
""Bundle 'bzx/vim-theme-pack'
""Plug 'dracula/vim',{'as':'dracula'}
"Plug 'drewtempelmeyer/palenight.vim'

"""Coc autocompletion 
"Plug 'neoclide/coc.nvim', {'branch': 'release'}

"""Vim-tmux
"Plug 'christoomey/vim-tmux-navigator'

"""Dev icons
"Plug 'ryanoasis/vim-devicons'

"""Indent line
"Plug 'Yggdroot/indentLine'

"""Git diff marks
"Plug 'airblade/vim-gitgutter'

"""React snippets
"Plug 'dsznajder/vscode-es7-javascript-react-snippets', 
"      \{ 'do': 'yarn install --frozen-lockfile && yarn compile' }

"""JSX & TSX syntax highlight
"Plug 'leafgarland/typescript-vim'
"Plug 'peitalin/vim-jsx-typescript'

"""Fuzzy Finder
"Plug 'ctrlpvim/ctrlp.vim'

"""Git in vim 
"Plug 'tpope/vim-fugitive'

""================VIM-PLUG-CONFIGURATION==============
"call plug#end()            " required
"filetype plugin indent on    " required
"filetype plugin on          "required for COC

"""Coc config for snippets
"let g:coc_global_extensions = [
"    \ 'coc-pairs',
"    \ 'coc-html',
"    \ 'coc-css',
"    \ 'coc-tsserver',
"    \ 'coc-json',
"    \ 'coc-emmet',
"    \]

"""Prettier config
"let g:prettier#autoformat=1
"let g:prettier#autoformat_require_pragma=0

""" NerdTree config to show .dot files
"let NERDTreeShowHidden=1

"""Indent Line config
"let g:indentLine_enable = 1
"let g:indentLine_char = 'â”Š'
""
"""TSX & JSX syntax highlight
"autocmd BufNewFile,BufRead *.tsx,*.jsx set filetype=typescriptreact

"""CtrlP config
"let g:ctrlp_show_hidden=1

 "==============CUSTOM SETTINGS===========
 set nocompatible
 set termguicolors
 set number
 set relativenumber  
 set background=dark
 "colors slate
 "colors low
 colors molokai
 "colorscheme dracula
 " colorscheme palenight
 set path+=**
 set wildmenu
 set showcmd
 set smartindent
 set tabstop=2
 set shiftwidth=2
 set expandtab
 "set complete+=kspell
 set autoindent
 set linebreak
 syntax enable
 set laststatus=2
 set title
 "set spell
 set cursorline
 set completeopt+=menuone,longest
 "for folding/hiding lines of code/text
 set foldmethod=indent
 set nofoldenable

 " Highlight matching pairs of brackets. Use the '%' character to jump
 "between them.
 set matchpairs+=<:>
 set ttyfast
 "set listchars=tab:\|\ 
 "set list

"Undo history in a file
" if has('persistant_undo')
"   set undodir=$HOME/.vim/undo
"   set undofile
" endif

" Custom Highlights
hi Normal guibg=NONE ctermbg=NONE
hi CursorLine term=NONE guibg=gray20 cterm=NONE ctermbg=4

 "Setting leader key
 let mapleader = ","

let g:netrw_winsize=-28
let g:netrw_banner=0
let g:netrw_liststyle=3
let g:netrw_sort_sequence='[\\/]$,*'

noswapfile

 "============KEY BINDINGS=============
 " inoremap {<cr> {<cr>}<c-o><s-o
 " inoremap [<cr> [<cr>]<c-o><s-o
 " inoremap (<cr> (<cr>)<c-o><s-o
 "up arrow key will move current line upward
 " nnoremap <up> ddkP   
 "down arrow key will move cursor line downward
 " nnoremap <down> ddp 
 ""Undo
 "nnoremap <C-Z> <esc>:undo<CR>
 "Redo
 "nnoremap <C-S-Z> <esc>:redo<CR>
 "Esc alias
 inoremap <leader>jk <esc>
 vnoremap <leader>jk <esc>

""VISUAL BLOCK not working
" nnoremap <leader>v <c-v>

 vnoremap J :m '>+1<CR>gv=gv
 vnoremap K :m '<-2<CR>gv=gv
 "puts the word in double-quotes
 "nnoremap <leader>" viw<esc>a"<esc>bi"<esc>lel

 nnoremap <leader>H ^
 nnoremap <leader>L $

 "if foldmethod=manual, select lines in VISUAL mode and fold/hide it
 "Go to ~/.vim/view/ to see views created by :mkview
 "To load the view :loadview

""Default to open all folds
au BufRead * normal zR
" nnoremap <leader>f za
" nnoremap <leader>FF zR
" nnoremap <leader>F zM
"vnoremap <leader>f zf

"scroll screen using j&k 
nnoremap J <c-e>
nnoremap K <c-y>

"80 character column limit
highlight OverLength ctermbg=0 ctermfg=1
match OverLength /\%81v.\+/
"set colorcolumn=100
"highlight ColorColumn ctermbg=0 guibg=gray30

 ""scrolling with mouse
set mouse=a
map <ScrollWheelUp> <C-u>zz
map <ScrollWheelDown> <C-d>zz

""Copy to Windows clipboard
"Copy selected only
vnoremap <C-c> y:!echo <C-r>=escape(substitute(shellescape(getreg('"')), '\n', 
      \'\r', 'g'), '#%!')<CR> <Bar> clip.exe<CR><CR>
"Copy whole line
"vnoremap <C-c> ::w !clip.exe<CR><CR>

nnoremap <C-d> <C-d>zz
nnoremap <C-u> <C-u>zz

"============PLUGIN KEY BINDINGS=============
""Toggle nerdtree 
" nnoremap N :NERDTreeToggle<enter>

""Mapping Tab to select emmet (CoC)
"inoremap <expr> <Tab> coc#pum#visible() ? '\<CR>' : coc#pum#confirm()
" inoremap <silent><expr> <Tab> coc#pum#visible() && 
"       \coc#pum#info()['index'] != -1 ? coc#pum#confirm() : "\<C-g>u\<CR>"

""CoC
" nmap <leader>r <Plug>(coc-references-used)
" nmap <leader>rn <Plug>(coc-rename)

""Prettier
" nnoremap <leader>p :Prettier

""fuzzy finder
""press CtrlC to exit
""File
"nnoremap <c-p> :CtrlP<enter>
""Buffer
"nnoremap <c-g> :CtrlPBuffer<enter>
""Mixed
"nnoremap <c-m> :CtrlPMixed<enter>
